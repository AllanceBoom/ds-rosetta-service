version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: edms-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: edms
      MYSQL_USER: edms_user
      MYSQL_PASSWORD: edms_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - edms-network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: edms-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - edms-network

  # 后端应用
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: edms-backend
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/edms?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
      SPRING_DATASOURCE_USERNAME: edms_user
      SPRING_DATASOURCE_PASSWORD: edms_password
      SPRING_REDIS_HOST: redis
      JWT_SECRET: edms-production-secret-key-2024
      FILE_UPLOAD_PATH: /app/uploads/
    ports:
      - "8080:8080"
    volumes:
      - uploads_data:/app/uploads
      - logs_data:/app/logs
    depends_on:
      - mysql
      - redis
    networks:
      - edms-network

  # 前端应用
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: edms-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - edms-network

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: edms-nginx
    restart: unless-stopped
    ports:
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - edms-network

volumes:
  mysql_data:
  redis_data:
  uploads_data:
  logs_data:

networks:
  edms-network:
    driver: bridge